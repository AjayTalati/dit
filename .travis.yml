language: python

python:
  - "2.6"
  - "2.7"
  - "3.2"
  - "3.3"

env:
  - CYTHON=0
  - CYTHON=1

virtualenv:
  system_site_packages: true

before_install:
  # Use Numpy 1.6.2 up to Python 2.x
  # Otherwise, rely on pip to install Numpy.
  - 'if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then sudo apt-get install -qq python-numpy; fi;'

  - 'if [ ${CYTHON} == "1" ]; then pip install cython; fi;'
  #- sudo apt-get install -qq python-numpy
  #- sudo apt-get install -qq python3-numpy
  #- sudo apt-get install -qq python-scipy
  #- sudo apt-get install -qq python3-scipy
  #- sudo apt-get install python-matplotlib
  - pip install coveralls --use-mirrors
  - pip install --upgrade nose

install:
  # Install dit
  - printenv PWD
  - pip install .

script:
  # Move to new directory so that dit is not imported from repository.
  # We need the full installation path.
  #
  # 2013-10-05
  #     We should not import dit to determine its installation location.
  #     The reason is that if importing dit fails, then we won't
  #     change directories at all. Then when nosetests is run, zero
  #     tests will be run. So we no longer do the following:
  #
  ###- cd
  #### Move into the installation path.
  ###- cd `python -c "from __future__ import print_function;import dit;import os;print(os.path.split(dit.__file__)[0])"`
  #
  #     Instead, we'll use pip, grep, and awk. A bit fragile but it works.
  #
  - export DIT_INSTALL=`pip show dit | grep Location | awk '{print $2"/dit"}'`

  ### Also, nose 1.3.0 does not tell coverage to only cover the requested
  ### package (except during the report).  So to restrict coverage, we must
  ### inform coverage through the .coveragerc file.
  - cp .coveragerc $DIT_INSTALL

  # Export current directory for logs.
  - cd $DIT_INSTALL
  - printenv PWD

  # Run nosetests.
  - nosetests -v --with-coverage --cover-erase --cover-package=dit

after_success:
  # We must run coveralls from the git repo.
  # But we ran tests from the installed directory.
  # The .coverage file looks like it contains absolute paths,
  # but coveralls does not seem to care.
  - cp .coverage $TRAVIS_BUILD_DIR
  - cd $TRAVIS_BUILD_DIR
  - coveralls
